
Boebot2.0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800200  000009f0  00000a84  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009f0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000011  00800202  00800202  00000a86  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a86  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ab8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000170  00000000  00000000  00000af8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000031d4  00000000  00000000  00000c68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000136e  00000000  00000000  00003e3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000012bc  00000000  00000000  000051aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003f8  00000000  00000000  00006468  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000dcb  00000000  00000000  00006860  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001779  00000000  00000000  0000762b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000140  00000000  00000000  00008da4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	07 c1       	rjmp	.+526    	; 0x210 <__ctors_end>
   2:	00 00       	nop
   4:	24 c1       	rjmp	.+584    	; 0x24e <__bad_interrupt>
   6:	00 00       	nop
   8:	22 c1       	rjmp	.+580    	; 0x24e <__bad_interrupt>
   a:	00 00       	nop
   c:	20 c1       	rjmp	.+576    	; 0x24e <__bad_interrupt>
   e:	00 00       	nop
  10:	1e c1       	rjmp	.+572    	; 0x24e <__bad_interrupt>
  12:	00 00       	nop
  14:	1c c1       	rjmp	.+568    	; 0x24e <__bad_interrupt>
  16:	00 00       	nop
  18:	1a c1       	rjmp	.+564    	; 0x24e <__bad_interrupt>
  1a:	00 00       	nop
  1c:	18 c1       	rjmp	.+560    	; 0x24e <__bad_interrupt>
  1e:	00 00       	nop
  20:	16 c1       	rjmp	.+556    	; 0x24e <__bad_interrupt>
  22:	00 00       	nop
  24:	14 c1       	rjmp	.+552    	; 0x24e <__bad_interrupt>
  26:	00 00       	nop
  28:	12 c1       	rjmp	.+548    	; 0x24e <__bad_interrupt>
  2a:	00 00       	nop
  2c:	10 c1       	rjmp	.+544    	; 0x24e <__bad_interrupt>
  2e:	00 00       	nop
  30:	0e c1       	rjmp	.+540    	; 0x24e <__bad_interrupt>
  32:	00 00       	nop
  34:	aa c2       	rjmp	.+1364   	; 0x58a <__vector_13>
  36:	00 00       	nop
  38:	0a c1       	rjmp	.+532    	; 0x24e <__bad_interrupt>
  3a:	00 00       	nop
  3c:	08 c1       	rjmp	.+528    	; 0x24e <__bad_interrupt>
  3e:	00 00       	nop
  40:	06 c1       	rjmp	.+524    	; 0x24e <__bad_interrupt>
  42:	00 00       	nop
  44:	04 c1       	rjmp	.+520    	; 0x24e <__bad_interrupt>
  46:	00 00       	nop
  48:	02 c1       	rjmp	.+516    	; 0x24e <__bad_interrupt>
  4a:	00 00       	nop
  4c:	00 c1       	rjmp	.+512    	; 0x24e <__bad_interrupt>
  4e:	00 00       	nop
  50:	fe c0       	rjmp	.+508    	; 0x24e <__bad_interrupt>
  52:	00 00       	nop
  54:	fc c0       	rjmp	.+504    	; 0x24e <__bad_interrupt>
  56:	00 00       	nop
  58:	fa c0       	rjmp	.+500    	; 0x24e <__bad_interrupt>
  5a:	00 00       	nop
  5c:	f5 c2       	rjmp	.+1514   	; 0x648 <__vector_23>
  5e:	00 00       	nop
  60:	f6 c0       	rjmp	.+492    	; 0x24e <__bad_interrupt>
  62:	00 00       	nop
  64:	f4 c0       	rjmp	.+488    	; 0x24e <__bad_interrupt>
  66:	00 00       	nop
  68:	f2 c0       	rjmp	.+484    	; 0x24e <__bad_interrupt>
  6a:	00 00       	nop
  6c:	f0 c0       	rjmp	.+480    	; 0x24e <__bad_interrupt>
  6e:	00 00       	nop
  70:	ee c0       	rjmp	.+476    	; 0x24e <__bad_interrupt>
  72:	00 00       	nop
  74:	ec c0       	rjmp	.+472    	; 0x24e <__bad_interrupt>
  76:	00 00       	nop
  78:	ea c0       	rjmp	.+468    	; 0x24e <__bad_interrupt>
  7a:	00 00       	nop
  7c:	e8 c0       	rjmp	.+464    	; 0x24e <__bad_interrupt>
  7e:	00 00       	nop
  80:	e6 c0       	rjmp	.+460    	; 0x24e <__bad_interrupt>
  82:	00 00       	nop
  84:	e4 c0       	rjmp	.+456    	; 0x24e <__bad_interrupt>
  86:	00 00       	nop
  88:	e2 c0       	rjmp	.+452    	; 0x24e <__bad_interrupt>
  8a:	00 00       	nop
  8c:	e0 c0       	rjmp	.+448    	; 0x24e <__bad_interrupt>
  8e:	00 00       	nop
  90:	de c0       	rjmp	.+444    	; 0x24e <__bad_interrupt>
  92:	00 00       	nop
  94:	dc c0       	rjmp	.+440    	; 0x24e <__bad_interrupt>
  96:	00 00       	nop
  98:	da c0       	rjmp	.+436    	; 0x24e <__bad_interrupt>
  9a:	00 00       	nop
  9c:	d8 c0       	rjmp	.+432    	; 0x24e <__bad_interrupt>
  9e:	00 00       	nop
  a0:	d6 c0       	rjmp	.+428    	; 0x24e <__bad_interrupt>
  a2:	00 00       	nop
  a4:	d4 c0       	rjmp	.+424    	; 0x24e <__bad_interrupt>
  a6:	00 00       	nop
  a8:	d2 c0       	rjmp	.+420    	; 0x24e <__bad_interrupt>
  aa:	00 00       	nop
  ac:	d0 c0       	rjmp	.+416    	; 0x24e <__bad_interrupt>
  ae:	00 00       	nop
  b0:	ce c0       	rjmp	.+412    	; 0x24e <__bad_interrupt>
  b2:	00 00       	nop
  b4:	cc c0       	rjmp	.+408    	; 0x24e <__bad_interrupt>
  b6:	00 00       	nop
  b8:	ca c0       	rjmp	.+404    	; 0x24e <__bad_interrupt>
  ba:	00 00       	nop
  bc:	c8 c0       	rjmp	.+400    	; 0x24e <__bad_interrupt>
  be:	00 00       	nop
  c0:	c6 c0       	rjmp	.+396    	; 0x24e <__bad_interrupt>
  c2:	00 00       	nop
  c4:	c4 c0       	rjmp	.+392    	; 0x24e <__bad_interrupt>
  c6:	00 00       	nop
  c8:	c2 c0       	rjmp	.+388    	; 0x24e <__bad_interrupt>
  ca:	00 00       	nop
  cc:	c0 c0       	rjmp	.+384    	; 0x24e <__bad_interrupt>
  ce:	00 00       	nop
  d0:	be c0       	rjmp	.+380    	; 0x24e <__bad_interrupt>
  d2:	00 00       	nop
  d4:	bc c0       	rjmp	.+376    	; 0x24e <__bad_interrupt>
  d6:	00 00       	nop
  d8:	ba c0       	rjmp	.+372    	; 0x24e <__bad_interrupt>
  da:	00 00       	nop
  dc:	b8 c0       	rjmp	.+368    	; 0x24e <__bad_interrupt>
  de:	00 00       	nop
  e0:	b6 c0       	rjmp	.+364    	; 0x24e <__bad_interrupt>
  e2:	00 00       	nop
  e4:	48 04       	cpc	r4, r8
  e6:	4b 04       	cpc	r4, r11
  e8:	3a 04       	cpc	r3, r10
  ea:	3e 04       	cpc	r3, r14
  ec:	44 04       	cpc	r4, r4
  ee:	82 04       	cpc	r8, r2
  f0:	4f 04       	cpc	r4, r15
  f2:	53 04       	cpc	r5, r3
  f4:	59 04       	cpc	r5, r9
  f6:	5d 04       	cpc	r5, r13
  f8:	61 04       	cpc	r6, r1
  fa:	67 04       	cpc	r6, r7
  fc:	6b 04       	cpc	r6, r11
  fe:	6f 04       	cpc	r6, r15
 100:	82 04       	cpc	r8, r2
 102:	75 04       	cpc	r7, r5
 104:	79 04       	cpc	r7, r9
 106:	7d 04       	cpc	r7, r13

00000108 <__trampolines_end>:
 108:	02 00       	Address 0x00000108 is out of bounds.
.word	0xffff	; ????

00000109 <digital_pin_to_timer_PGM>:
 109:	00 00 0a 0b 02 09 0c 0d 0e 08 07 03 04 01 00 00     ................
	...
 135:	12 11 10 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

0000014f <digital_pin_to_bit_mask_PGM>:
 14f:	01 02 10 20 20 08 08 10 20 40 10 20 40 80 02 01     ...  ... @. @...
 15f:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 80 40     ........... @..@
 16f:	20 10 08 04 02 01 80 04 02 01 80 40 20 10 08 04      ..........@ ...
 17f:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 01 02     ........... @...
 18f:	04 08 10 20 40 80                                   ... @.

00000195 <digital_pin_to_port_PGM>:
 195:	05 05 05 05 07 05 08 08 08 08 02 02 02 02 0a 0a     ................
 1a5:	08 08 04 04 04 04 01 01 01 01 01 01 01 01 03 03     ................
 1b5:	03 03 03 03 03 03 04 07 07 07 0c 0c 0c 0c 0c 0c     ................
 1c5:	0c 0c 02 02 02 02 06 06 06 06 06 06 06 06 0b 0b     ................
 1d5:	0b 0b 0b 0b 0b 0b                                   ......

000001db <port_to_output_PGM>:
 1db:	00 00 22 00 25 00 28 00 2b 00 2e 00 31 00 34 00     ..".%.(.+...1.4.
 1eb:	02 01 00 00 05 01 08 01 0b 01                       ..........

000001f5 <port_to_mode_PGM>:
 1f5:	00 00 21 00 24 00 27 00 2a 00 2d 00 30 00 33 00     ..!.$.'.*.-.0.3.
 205:	01 01 00 00 04 01 07 01 0a 01 00                    ...........

00000210 <__ctors_end>:
 210:	11 24       	eor	r1, r1
 212:	1f be       	out	0x3f, r1	; 63
 214:	cf ef       	ldi	r28, 0xFF	; 255
 216:	d1 e2       	ldi	r29, 0x21	; 33
 218:	de bf       	out	0x3e, r29	; 62
 21a:	cd bf       	out	0x3d, r28	; 61
 21c:	00 e0       	ldi	r16, 0x00	; 0
 21e:	0c bf       	out	0x3c, r16	; 60

00000220 <__do_copy_data>:
 220:	12 e0       	ldi	r17, 0x02	; 2
 222:	a0 e0       	ldi	r26, 0x00	; 0
 224:	b2 e0       	ldi	r27, 0x02	; 2
 226:	e0 ef       	ldi	r30, 0xF0	; 240
 228:	f9 e0       	ldi	r31, 0x09	; 9
 22a:	00 e0       	ldi	r16, 0x00	; 0
 22c:	0b bf       	out	0x3b, r16	; 59
 22e:	02 c0       	rjmp	.+4      	; 0x234 <__do_copy_data+0x14>
 230:	07 90       	elpm	r0, Z+
 232:	0d 92       	st	X+, r0
 234:	a2 30       	cpi	r26, 0x02	; 2
 236:	b1 07       	cpc	r27, r17
 238:	d9 f7       	brne	.-10     	; 0x230 <__do_copy_data+0x10>

0000023a <__do_clear_bss>:
 23a:	22 e0       	ldi	r18, 0x02	; 2
 23c:	a2 e0       	ldi	r26, 0x02	; 2
 23e:	b2 e0       	ldi	r27, 0x02	; 2
 240:	01 c0       	rjmp	.+2      	; 0x244 <.do_clear_bss_start>

00000242 <.do_clear_bss_loop>:
 242:	1d 92       	st	X+, r1

00000244 <.do_clear_bss_start>:
 244:	a3 31       	cpi	r26, 0x13	; 19
 246:	b2 07       	cpc	r27, r18
 248:	e1 f7       	brne	.-8      	; 0x242 <.do_clear_bss_loop>
 24a:	47 d1       	rcall	.+654    	; 0x4da <main>
 24c:	cf c3       	rjmp	.+1950   	; 0x9ec <_exit>

0000024e <__bad_interrupt>:
 24e:	d8 ce       	rjmp	.-592    	; 0x0 <__vectors>

00000250 <setup>:

//Honk for give time (in ms)
void horn(int time){
	tone(hornPin, 261); //Middle C
	delay(time);
	noTone(hornPin); //stop
 250:	61 e0       	ldi	r22, 0x01	; 1
 252:	86 e0       	ldi	r24, 0x06	; 6
 254:	58 d3       	rcall	.+1712   	; 0x906 <pinMode>
 256:	61 e0       	ldi	r22, 0x01	; 1
 258:	87 e0       	ldi	r24, 0x07	; 7
 25a:	55 d3       	rcall	.+1706   	; 0x906 <pinMode>
 25c:	61 e0       	ldi	r22, 0x01	; 1
 25e:	88 e0       	ldi	r24, 0x08	; 8
 260:	52 d3       	rcall	.+1700   	; 0x906 <pinMode>
 262:	61 e0       	ldi	r22, 0x01	; 1
 264:	81 e0       	ldi	r24, 0x01	; 1
 266:	4f d3       	rcall	.+1694   	; 0x906 <pinMode>
 268:	61 e0       	ldi	r22, 0x01	; 1
 26a:	84 e0       	ldi	r24, 0x04	; 4
 26c:	4c d3       	rcall	.+1688   	; 0x906 <pinMode>
 26e:	61 e0       	ldi	r22, 0x01	; 1
 270:	85 e0       	ldi	r24, 0x05	; 5
 272:	49 d3       	rcall	.+1682   	; 0x906 <pinMode>
 274:	61 e0       	ldi	r22, 0x01	; 1
 276:	82 e0       	ldi	r24, 0x02	; 2
 278:	46 d3       	rcall	.+1676   	; 0x906 <pinMode>
 27a:	61 e0       	ldi	r22, 0x01	; 1
 27c:	83 e0       	ldi	r24, 0x03	; 3
 27e:	43 d3       	rcall	.+1670   	; 0x906 <pinMode>
 280:	61 e0       	ldi	r22, 0x01	; 1
 282:	80 e0       	ldi	r24, 0x00	; 0
 284:	40 d3       	rcall	.+1664   	; 0x906 <pinMode>
 286:	61 e0       	ldi	r22, 0x01	; 1
 288:	80 e0       	ldi	r24, 0x00	; 0
 28a:	3d d3       	rcall	.+1658   	; 0x906 <pinMode>
 28c:	61 e0       	ldi	r22, 0x01	; 1
 28e:	86 e0       	ldi	r24, 0x06	; 6
 290:	3a d3       	rcall	.+1652   	; 0x906 <pinMode>
 292:	60 e0       	ldi	r22, 0x00	; 0
 294:	80 e0       	ldi	r24, 0x00	; 0
 296:	37 d3       	rcall	.+1646   	; 0x906 <pinMode>
 298:	61 e0       	ldi	r22, 0x01	; 1
 29a:	88 e1       	ldi	r24, 0x18	; 24
 29c:	34 d3       	rcall	.+1640   	; 0x906 <pinMode>
 29e:	61 e0       	ldi	r22, 0x01	; 1
 2a0:	82 e2       	ldi	r24, 0x22	; 34
 2a2:	31 d3       	rcall	.+1634   	; 0x906 <pinMode>
 2a4:	61 e0       	ldi	r22, 0x01	; 1
 2a6:	84 e2       	ldi	r24, 0x24	; 36
 2a8:	2e d3       	rcall	.+1628   	; 0x906 <pinMode>
 2aa:	61 e0       	ldi	r22, 0x01	; 1
 2ac:	86 e2       	ldi	r24, 0x26	; 38
 2ae:	2b d3       	rcall	.+1622   	; 0x906 <pinMode>
 2b0:	61 e0       	ldi	r22, 0x01	; 1
 2b2:	88 e2       	ldi	r24, 0x28	; 40
 2b4:	28 d3       	rcall	.+1616   	; 0x906 <pinMode>
 2b6:	61 e0       	ldi	r22, 0x01	; 1
 2b8:	8a e2       	ldi	r24, 0x2A	; 42
 2ba:	25 d3       	rcall	.+1610   	; 0x906 <pinMode>
 2bc:	61 e0       	ldi	r22, 0x01	; 1
 2be:	8c e2       	ldi	r24, 0x2C	; 44
 2c0:	22 d3       	rcall	.+1604   	; 0x906 <pinMode>
 2c2:	61 e0       	ldi	r22, 0x01	; 1
 2c4:	8e e2       	ldi	r24, 0x2E	; 46
 2c6:	1f d3       	rcall	.+1598   	; 0x906 <pinMode>
 2c8:	61 e0       	ldi	r22, 0x01	; 1
 2ca:	80 e3       	ldi	r24, 0x30	; 48
 2cc:	1c d3       	rcall	.+1592   	; 0x906 <pinMode>
 2ce:	61 e0       	ldi	r22, 0x01	; 1
 2d0:	82 e3       	ldi	r24, 0x32	; 50
 2d2:	19 d3       	rcall	.+1586   	; 0x906 <pinMode>
 2d4:	61 e0       	ldi	r22, 0x01	; 1
 2d6:	84 e3       	ldi	r24, 0x34	; 52
 2d8:	16 c3       	rjmp	.+1580   	; 0x906 <pinMode>

000002da <_Z12displayPoweri>:
}

void displayPower(int speed){
	if (speed == 25){
 2da:	89 31       	cpi	r24, 0x19	; 25
 2dc:	91 05       	cpc	r25, r1
 2de:	19 f4       	brne	.+6      	; 0x2e6 <_Z12displayPoweri+0xc>
		digitalWrite(fistPowerPin, 1);
 2e0:	61 e0       	ldi	r22, 0x01	; 1
 2e2:	82 e2       	ldi	r24, 0x22	; 34
 2e4:	d9 c0       	rjmp	.+434    	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
	}
	else if (speed == 50){
 2e6:	82 33       	cpi	r24, 0x32	; 50
 2e8:	91 05       	cpc	r25, r1
 2ea:	31 f4       	brne	.+12     	; 0x2f8 <_Z12displayPoweri+0x1e>
		digitalWrite(fistPowerPin, 1);
 2ec:	61 e0       	ldi	r22, 0x01	; 1
 2ee:	82 e2       	ldi	r24, 0x22	; 34
 2f0:	46 d3       	rcall	.+1676   	; 0x97e <digitalWrite>
		digitalWrite(secondPowerPin, 1);
 2f2:	61 e0       	ldi	r22, 0x01	; 1
 2f4:	84 e2       	ldi	r24, 0x24	; 36
 2f6:	d0 c0       	rjmp	.+416    	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
	}
	else if (speed == 75){
 2f8:	8b 34       	cpi	r24, 0x4B	; 75
 2fa:	91 05       	cpc	r25, r1
 2fc:	49 f4       	brne	.+18     	; 0x310 <_Z12displayPoweri+0x36>
		digitalWrite(fistPowerPin, 1);
 2fe:	61 e0       	ldi	r22, 0x01	; 1
 300:	82 e2       	ldi	r24, 0x22	; 34
 302:	3d d3       	rcall	.+1658   	; 0x97e <digitalWrite>
		digitalWrite(secondPowerPin, 1);
 304:	61 e0       	ldi	r22, 0x01	; 1
 306:	84 e2       	ldi	r24, 0x24	; 36
 308:	3a d3       	rcall	.+1652   	; 0x97e <digitalWrite>
		digitalWrite(thirdPowerPin, 1);
 30a:	61 e0       	ldi	r22, 0x01	; 1
 30c:	86 e2       	ldi	r24, 0x26	; 38
 30e:	c4 c0       	rjmp	.+392    	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
	}
	else if (speed == 100){
 310:	84 36       	cpi	r24, 0x64	; 100
 312:	91 05       	cpc	r25, r1
		digitalWrite(fistPowerPin, 1);
 314:	61 f4       	brne	.+24     	; 0x32e <_Z12displayPoweri+0x54>
 316:	61 e0       	ldi	r22, 0x01	; 1
 318:	82 e2       	ldi	r24, 0x22	; 34
		digitalWrite(secondPowerPin, 1);
 31a:	31 d3       	rcall	.+1634   	; 0x97e <digitalWrite>
 31c:	61 e0       	ldi	r22, 0x01	; 1
 31e:	84 e2       	ldi	r24, 0x24	; 36
		digitalWrite(thirdPowerPin, 1);
 320:	2e d3       	rcall	.+1628   	; 0x97e <digitalWrite>
 322:	61 e0       	ldi	r22, 0x01	; 1
 324:	86 e2       	ldi	r24, 0x26	; 38
 326:	2b d3       	rcall	.+1622   	; 0x97e <digitalWrite>
		digitalWrite(fourthPowerPin, 1);
 328:	61 e0       	ldi	r22, 0x01	; 1
 32a:	88 e2       	ldi	r24, 0x28	; 40
	}
	else if (speed == 125){
 32c:	b5 c0       	rjmp	.+362    	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 32e:	8d 37       	cpi	r24, 0x7D	; 125
		digitalWrite(fistPowerPin, 1);
 330:	91 05       	cpc	r25, r1
 332:	79 f4       	brne	.+30     	; 0x352 <_Z12displayPoweri+0x78>
 334:	61 e0       	ldi	r22, 0x01	; 1
		digitalWrite(secondPowerPin, 1);
 336:	82 e2       	ldi	r24, 0x22	; 34
 338:	22 d3       	rcall	.+1604   	; 0x97e <digitalWrite>
 33a:	61 e0       	ldi	r22, 0x01	; 1
		digitalWrite(thirdPowerPin, 1);
 33c:	84 e2       	ldi	r24, 0x24	; 36
 33e:	1f d3       	rcall	.+1598   	; 0x97e <digitalWrite>
 340:	61 e0       	ldi	r22, 0x01	; 1
 342:	86 e2       	ldi	r24, 0x26	; 38
		digitalWrite(fourthPowerPin, 1);
 344:	1c d3       	rcall	.+1592   	; 0x97e <digitalWrite>
 346:	61 e0       	ldi	r22, 0x01	; 1
 348:	88 e2       	ldi	r24, 0x28	; 40
		digitalWrite(fifthPowerPin, 1);
 34a:	19 d3       	rcall	.+1586   	; 0x97e <digitalWrite>
 34c:	61 e0       	ldi	r22, 0x01	; 1
	}
	else if (speed == 150){
 34e:	8a e2       	ldi	r24, 0x2A	; 42
 350:	a3 c0       	rjmp	.+326    	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
		digitalWrite(fistPowerPin, 1);
 352:	86 39       	cpi	r24, 0x96	; 150
 354:	91 05       	cpc	r25, r1
 356:	91 f4       	brne	.+36     	; 0x37c <_Z12displayPoweri+0xa2>
		digitalWrite(secondPowerPin, 1);
 358:	61 e0       	ldi	r22, 0x01	; 1
 35a:	82 e2       	ldi	r24, 0x22	; 34
 35c:	10 d3       	rcall	.+1568   	; 0x97e <digitalWrite>
		digitalWrite(thirdPowerPin, 1);
 35e:	61 e0       	ldi	r22, 0x01	; 1
 360:	84 e2       	ldi	r24, 0x24	; 36
 362:	0d d3       	rcall	.+1562   	; 0x97e <digitalWrite>
 364:	61 e0       	ldi	r22, 0x01	; 1
		digitalWrite(fourthPowerPin, 1);
 366:	86 e2       	ldi	r24, 0x26	; 38
 368:	0a d3       	rcall	.+1556   	; 0x97e <digitalWrite>
 36a:	61 e0       	ldi	r22, 0x01	; 1
		digitalWrite(fifthPowerPin, 1);
 36c:	88 e2       	ldi	r24, 0x28	; 40
 36e:	07 d3       	rcall	.+1550   	; 0x97e <digitalWrite>
 370:	61 e0       	ldi	r22, 0x01	; 1
		digitalWrite(sixthPowerPin, 1);
 372:	8a e2       	ldi	r24, 0x2A	; 42
 374:	04 d3       	rcall	.+1544   	; 0x97e <digitalWrite>
	}
	else if (speed == 175){
 376:	61 e0       	ldi	r22, 0x01	; 1
 378:	8c e2       	ldi	r24, 0x2C	; 44
		digitalWrite(fistPowerPin, 1);
 37a:	8e c0       	rjmp	.+284    	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 37c:	8f 3a       	cpi	r24, 0xAF	; 175
 37e:	91 05       	cpc	r25, r1
		digitalWrite(secondPowerPin, 1);
 380:	a9 f4       	brne	.+42     	; 0x3ac <_Z12displayPoweri+0xd2>
 382:	61 e0       	ldi	r22, 0x01	; 1
 384:	82 e2       	ldi	r24, 0x22	; 34
 386:	fb d2       	rcall	.+1526   	; 0x97e <digitalWrite>
		digitalWrite(thirdPowerPin, 1);
 388:	61 e0       	ldi	r22, 0x01	; 1
 38a:	84 e2       	ldi	r24, 0x24	; 36
 38c:	f8 d2       	rcall	.+1520   	; 0x97e <digitalWrite>
		digitalWrite(fourthPowerPin, 1);
 38e:	61 e0       	ldi	r22, 0x01	; 1
 390:	86 e2       	ldi	r24, 0x26	; 38
 392:	f5 d2       	rcall	.+1514   	; 0x97e <digitalWrite>
		digitalWrite(fifthPowerPin, 1);
 394:	61 e0       	ldi	r22, 0x01	; 1
 396:	88 e2       	ldi	r24, 0x28	; 40
 398:	f2 d2       	rcall	.+1508   	; 0x97e <digitalWrite>
		digitalWrite(sixthPowerPin, 1);
 39a:	61 e0       	ldi	r22, 0x01	; 1
 39c:	8a e2       	ldi	r24, 0x2A	; 42
 39e:	ef d2       	rcall	.+1502   	; 0x97e <digitalWrite>
		digitalWrite(seventhPowerPin, 1);
 3a0:	61 e0       	ldi	r22, 0x01	; 1
 3a2:	8c e2       	ldi	r24, 0x2C	; 44
	}
	else if (speed == 200){
 3a4:	ec d2       	rcall	.+1496   	; 0x97e <digitalWrite>
 3a6:	61 e0       	ldi	r22, 0x01	; 1
		digitalWrite(fistPowerPin, 1);
 3a8:	8e e2       	ldi	r24, 0x2E	; 46
 3aa:	76 c0       	rjmp	.+236    	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 3ac:	88 3c       	cpi	r24, 0xC8	; 200
 3ae:	91 05       	cpc	r25, r1
		digitalWrite(secondPowerPin, 1);
 3b0:	c1 f4       	brne	.+48     	; 0x3e2 <_Z12displayPoweri+0x108>
 3b2:	61 e0       	ldi	r22, 0x01	; 1
 3b4:	82 e2       	ldi	r24, 0x22	; 34
 3b6:	e3 d2       	rcall	.+1478   	; 0x97e <digitalWrite>
		digitalWrite(thirdPowerPin, 1);
 3b8:	61 e0       	ldi	r22, 0x01	; 1
 3ba:	84 e2       	ldi	r24, 0x24	; 36
 3bc:	e0 d2       	rcall	.+1472   	; 0x97e <digitalWrite>
		digitalWrite(fourthPowerPin, 1);
 3be:	61 e0       	ldi	r22, 0x01	; 1
 3c0:	86 e2       	ldi	r24, 0x26	; 38
 3c2:	dd d2       	rcall	.+1466   	; 0x97e <digitalWrite>
		digitalWrite(fifthPowerPin, 1);
 3c4:	61 e0       	ldi	r22, 0x01	; 1
 3c6:	88 e2       	ldi	r24, 0x28	; 40
 3c8:	da d2       	rcall	.+1460   	; 0x97e <digitalWrite>
		digitalWrite(sixthPowerPin, 1);
 3ca:	61 e0       	ldi	r22, 0x01	; 1
 3cc:	8a e2       	ldi	r24, 0x2A	; 42
 3ce:	d7 d2       	rcall	.+1454   	; 0x97e <digitalWrite>
		digitalWrite(seventhPowerPin, 1);
 3d0:	61 e0       	ldi	r22, 0x01	; 1
 3d2:	8c e2       	ldi	r24, 0x2C	; 44
 3d4:	d4 d2       	rcall	.+1448   	; 0x97e <digitalWrite>
		digitalWrite(eightPowerPin, 1);
 3d6:	61 e0       	ldi	r22, 0x01	; 1
 3d8:	8e e2       	ldi	r24, 0x2E	; 46
	}
	else if (speed == 225){
 3da:	d1 d2       	rcall	.+1442   	; 0x97e <digitalWrite>
 3dc:	61 e0       	ldi	r22, 0x01	; 1
 3de:	80 e3       	ldi	r24, 0x30	; 48
		digitalWrite(fistPowerPin, 1);
 3e0:	5b c0       	rjmp	.+182    	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 3e2:	81 3e       	cpi	r24, 0xE1	; 225
 3e4:	91 05       	cpc	r25, r1
 3e6:	d9 f4       	brne	.+54     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
		digitalWrite(secondPowerPin, 1);
 3e8:	61 e0       	ldi	r22, 0x01	; 1
 3ea:	82 e2       	ldi	r24, 0x22	; 34
 3ec:	c8 d2       	rcall	.+1424   	; 0x97e <digitalWrite>
		digitalWrite(thirdPowerPin, 1);
 3ee:	61 e0       	ldi	r22, 0x01	; 1
 3f0:	84 e2       	ldi	r24, 0x24	; 36
 3f2:	c5 d2       	rcall	.+1418   	; 0x97e <digitalWrite>
		digitalWrite(fourthPowerPin, 1);
 3f4:	61 e0       	ldi	r22, 0x01	; 1
 3f6:	86 e2       	ldi	r24, 0x26	; 38
 3f8:	c2 d2       	rcall	.+1412   	; 0x97e <digitalWrite>
		digitalWrite(fifthPowerPin, 1);
 3fa:	61 e0       	ldi	r22, 0x01	; 1
 3fc:	88 e2       	ldi	r24, 0x28	; 40
 3fe:	bf d2       	rcall	.+1406   	; 0x97e <digitalWrite>
		digitalWrite(sixthPowerPin, 1);
 400:	61 e0       	ldi	r22, 0x01	; 1
 402:	8a e2       	ldi	r24, 0x2A	; 42
 404:	bc d2       	rcall	.+1400   	; 0x97e <digitalWrite>
		digitalWrite(seventhPowerPin, 1);
 406:	61 e0       	ldi	r22, 0x01	; 1
 408:	8c e2       	ldi	r24, 0x2C	; 44
 40a:	b9 d2       	rcall	.+1394   	; 0x97e <digitalWrite>
		digitalWrite(eightPowerPin, 1);
 40c:	61 e0       	ldi	r22, 0x01	; 1
 40e:	8e e2       	ldi	r24, 0x2E	; 46
 410:	b6 d2       	rcall	.+1388   	; 0x97e <digitalWrite>
		digitalWrite(ninthPowerPin, 1);
 412:	61 e0       	ldi	r22, 0x01	; 1
 414:	80 e3       	ldi	r24, 0x30	; 48
	}
	else if (speed == 250){
 416:	b3 d2       	rcall	.+1382   	; 0x97e <digitalWrite>
 418:	61 e0       	ldi	r22, 0x01	; 1
		digitalWrite(fistPowerPin, 1);
 41a:	82 e3       	ldi	r24, 0x32	; 50
 41c:	3d c0       	rjmp	.+122    	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 41e:	8a 3f       	cpi	r24, 0xFA	; 250
		digitalWrite(secondPowerPin, 1);
 420:	91 05       	cpc	r25, r1
 422:	e9 f4       	brne	.+58     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 424:	61 e0       	ldi	r22, 0x01	; 1
		digitalWrite(thirdPowerPin, 1);
 426:	82 e2       	ldi	r24, 0x22	; 34
 428:	aa d2       	rcall	.+1364   	; 0x97e <digitalWrite>
 42a:	61 e0       	ldi	r22, 0x01	; 1
		digitalWrite(fourthPowerPin, 1);
 42c:	84 e2       	ldi	r24, 0x24	; 36
 42e:	a7 d2       	rcall	.+1358   	; 0x97e <digitalWrite>
 430:	61 e0       	ldi	r22, 0x01	; 1
		digitalWrite(fifthPowerPin, 1);
 432:	86 e2       	ldi	r24, 0x26	; 38
 434:	a4 d2       	rcall	.+1352   	; 0x97e <digitalWrite>
 436:	61 e0       	ldi	r22, 0x01	; 1
		digitalWrite(sixthPowerPin, 1);
 438:	88 e2       	ldi	r24, 0x28	; 40
 43a:	a1 d2       	rcall	.+1346   	; 0x97e <digitalWrite>
 43c:	61 e0       	ldi	r22, 0x01	; 1
		digitalWrite(seventhPowerPin, 1);
 43e:	8a e2       	ldi	r24, 0x2A	; 42
 440:	9e d2       	rcall	.+1340   	; 0x97e <digitalWrite>
 442:	61 e0       	ldi	r22, 0x01	; 1
 444:	8c e2       	ldi	r24, 0x2C	; 44
		digitalWrite(eightPowerPin, 1);
 446:	9b d2       	rcall	.+1334   	; 0x97e <digitalWrite>
 448:	61 e0       	ldi	r22, 0x01	; 1
 44a:	8e e2       	ldi	r24, 0x2E	; 46
 44c:	98 d2       	rcall	.+1328   	; 0x97e <digitalWrite>
		digitalWrite(ninthPowerPin, 1);
 44e:	61 e0       	ldi	r22, 0x01	; 1
 450:	80 e3       	ldi	r24, 0x30	; 48
 452:	95 d2       	rcall	.+1322   	; 0x97e <digitalWrite>
 454:	61 e0       	ldi	r22, 0x01	; 1
		digitalWrite(tenthPowerPin, 1);
 456:	82 e3       	ldi	r24, 0x32	; 50
 458:	92 d2       	rcall	.+1316   	; 0x97e <digitalWrite>
	}
	else {
		digitalWrite(fistPowerPin, 0);
 45a:	61 e0       	ldi	r22, 0x01	; 1
 45c:	1c c0       	rjmp	.+56     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 45e:	60 e0       	ldi	r22, 0x00	; 0
 460:	82 e2       	ldi	r24, 0x22	; 34
		digitalWrite(secondPowerPin, 0);
 462:	8d d2       	rcall	.+1306   	; 0x97e <digitalWrite>
 464:	60 e0       	ldi	r22, 0x00	; 0
 466:	84 e2       	ldi	r24, 0x24	; 36
 468:	8a d2       	rcall	.+1300   	; 0x97e <digitalWrite>
		digitalWrite(thirdPowerPin, 0);
 46a:	60 e0       	ldi	r22, 0x00	; 0
 46c:	86 e2       	ldi	r24, 0x26	; 38
 46e:	87 d2       	rcall	.+1294   	; 0x97e <digitalWrite>
 470:	60 e0       	ldi	r22, 0x00	; 0
		digitalWrite(fourthPowerPin, 0);
 472:	88 e2       	ldi	r24, 0x28	; 40
 474:	84 d2       	rcall	.+1288   	; 0x97e <digitalWrite>
 476:	60 e0       	ldi	r22, 0x00	; 0
 478:	8a e2       	ldi	r24, 0x2A	; 42
		digitalWrite(fifthPowerPin, 0);
 47a:	81 d2       	rcall	.+1282   	; 0x97e <digitalWrite>
 47c:	60 e0       	ldi	r22, 0x00	; 0
 47e:	8c e2       	ldi	r24, 0x2C	; 44
 480:	7e d2       	rcall	.+1276   	; 0x97e <digitalWrite>
		digitalWrite(sixthPowerPin, 0);
 482:	60 e0       	ldi	r22, 0x00	; 0
 484:	8e e2       	ldi	r24, 0x2E	; 46
 486:	7b d2       	rcall	.+1270   	; 0x97e <digitalWrite>
 488:	60 e0       	ldi	r22, 0x00	; 0
		digitalWrite(seventhPowerPin, 0);
 48a:	80 e3       	ldi	r24, 0x30	; 48
 48c:	78 d2       	rcall	.+1264   	; 0x97e <digitalWrite>
 48e:	60 e0       	ldi	r22, 0x00	; 0
 490:	82 e3       	ldi	r24, 0x32	; 50
		digitalWrite(eightPowerPin, 0);
 492:	75 d2       	rcall	.+1258   	; 0x97e <digitalWrite>
 494:	60 e0       	ldi	r22, 0x00	; 0
 496:	84 e3       	ldi	r24, 0x34	; 52
 498:	72 c2       	rjmp	.+1252   	; 0x97e <digitalWrite>

0000049a <loop>:
		digitalWrite(ninthPowerPin, 0);
 49a:	cf 93       	push	r28
 49c:	df 93       	push	r29
 49e:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__data_end>
		digitalWrite(tenthPowerPin, 0);
 4a2:	81 11       	cpse	r24, r1
 4a4:	16 c0       	rjmp	.+44     	; 0x4d2 <loop+0x38>
 4a6:	c0 e0       	ldi	r28, 0x00	; 0
 4a8:	d0 e0       	ldi	r29, 0x00	; 0
	//Test code, will only run once
	if (hasRun == false)
	{
		for (int i = 0; i < 250; i+= 25)
		{
			displayPower(i);
 4aa:	ce 01       	movw	r24, r28
 4ac:	16 df       	rcall	.-468    	; 0x2da <_Z12displayPoweri>
			delay(200);
 4ae:	68 ec       	ldi	r22, 0xC8	; 200
 4b0:	70 e0       	ldi	r23, 0x00	; 0
 4b2:	80 e0       	ldi	r24, 0x00	; 0
 4b4:	90 e0       	ldi	r25, 0x00	; 0
 4b6:	37 d1       	rcall	.+622    	; 0x726 <delay>
	//Implement IR code to handle all the remote input

	//Test code, will only run once
	if (hasRun == false)
	{
		for (int i = 0; i < 250; i+= 25)
 4b8:	69 96       	adiw	r28, 0x19	; 25
 4ba:	ca 3f       	cpi	r28, 0xFA	; 250
 4bc:	d1 05       	cpc	r29, r1
 4be:	a9 f7       	brne	.-22     	; 0x4aa <loop+0x10>
			delay(200);
		}

		for (int i = 250; i > 0; i-+ 25)
		{
			displayPower(i);
 4c0:	8a ef       	ldi	r24, 0xFA	; 250
 4c2:	90 e0       	ldi	r25, 0x00	; 0
 4c4:	0a df       	rcall	.-492    	; 0x2da <_Z12displayPoweri>
			delay(200);
 4c6:	68 ec       	ldi	r22, 0xC8	; 200
 4c8:	70 e0       	ldi	r23, 0x00	; 0
 4ca:	80 e0       	ldi	r24, 0x00	; 0
 4cc:	90 e0       	ldi	r25, 0x00	; 0
 4ce:	2b d1       	rcall	.+598    	; 0x726 <delay>
 4d0:	f7 cf       	rjmp	.-18     	; 0x4c0 <loop+0x26>

		displayPower(255);
		horn(400);
		hasRun = true;
	}
 4d2:	df 91       	pop	r29
 4d4:	cf 91       	pop	r28
 4d6:	08 95       	ret

000004d8 <initVariant>:
 4d8:	08 95       	ret

000004da <main>:
 4da:	5e d1       	rcall	.+700    	; 0x798 <init>
 4dc:	fd df       	rcall	.-6      	; 0x4d8 <initVariant>
 4de:	b8 de       	rcall	.-656    	; 0x250 <setup>
 4e0:	c0 e0       	ldi	r28, 0x00	; 0
 4e2:	d0 e0       	ldi	r29, 0x00	; 0
 4e4:	da df       	rcall	.-76     	; 0x49a <loop>
 4e6:	20 97       	sbiw	r28, 0x00	; 0
 4e8:	e9 f3       	breq	.-6      	; 0x4e4 <main+0xa>
 4ea:	0e 94 00 00 	call	0	; 0x0 <__vectors>
 4ee:	fa cf       	rjmp	.-12     	; 0x4e4 <main+0xa>

000004f0 <_Z12disableTimerh>:
 4f0:	82 30       	cpi	r24, 0x02	; 2
 4f2:	a9 f0       	breq	.+42     	; 0x51e <_Z12disableTimerh+0x2e>
 4f4:	28 f4       	brcc	.+10     	; 0x500 <_Z12disableTimerh+0x10>
 4f6:	88 23       	and	r24, r24
 4f8:	49 f0       	breq	.+18     	; 0x50c <_Z12disableTimerh+0x1c>
 4fa:	81 30       	cpi	r24, 0x01	; 1
 4fc:	51 f0       	breq	.+20     	; 0x512 <_Z12disableTimerh+0x22>
 4fe:	08 95       	ret
 500:	84 30       	cpi	r24, 0x04	; 4
 502:	21 f1       	breq	.+72     	; 0x54c <_Z12disableTimerh+0x5c>
 504:	e8 f0       	brcs	.+58     	; 0x540 <_Z12disableTimerh+0x50>
 506:	85 30       	cpi	r24, 0x05	; 5
 508:	39 f1       	breq	.+78     	; 0x558 <_Z12disableTimerh+0x68>
 50a:	08 95       	ret
 50c:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
 510:	08 95       	ret
 512:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x70006f>
 516:	8d 7f       	andi	r24, 0xFD	; 253
 518:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x70006f>
 51c:	08 95       	ret
 51e:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <__TEXT_REGION_LENGTH__+0x700070>
 522:	8d 7f       	andi	r24, 0xFD	; 253
 524:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x700070>
 528:	81 e0       	ldi	r24, 0x01	; 1
 52a:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
 52e:	80 91 b1 00 	lds	r24, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7000b1>
 532:	88 7f       	andi	r24, 0xF8	; 248
 534:	84 60       	ori	r24, 0x04	; 4
 536:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7000b1>
 53a:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>
 53e:	08 95       	ret
 540:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x700071>
 544:	8d 7f       	andi	r24, 0xFD	; 253
 546:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <__TEXT_REGION_LENGTH__+0x700071>
 54a:	08 95       	ret
 54c:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <__TEXT_REGION_LENGTH__+0x700072>
 550:	8d 7f       	andi	r24, 0xFD	; 253
 552:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <__TEXT_REGION_LENGTH__+0x700072>
 556:	08 95       	ret
 558:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x700073>
 55c:	8d 7f       	andi	r24, 0xFD	; 253
 55e:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x700073>
 562:	08 95       	ret

00000564 <_Z6noToneh>:
 564:	cf 93       	push	r28
 566:	c8 2f       	mov	r28, r24
 568:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
 56c:	c8 13       	cpse	r28, r24
 56e:	07 c0       	rjmp	.+14     	; 0x57e <_Z6noToneh+0x1a>
 570:	e8 e0       	ldi	r30, 0x08	; 8
 572:	f1 e0       	ldi	r31, 0x01	; 1
 574:	84 91       	lpm	r24, Z
 576:	9f ef       	ldi	r25, 0xFF	; 255
 578:	90 93 00 02 	sts	0x0200, r25	; 0x800200 <__DATA_REGION_ORIGIN__>
 57c:	01 c0       	rjmp	.+2      	; 0x580 <_Z6noToneh+0x1c>
 57e:	8f ef       	ldi	r24, 0xFF	; 255
 580:	b7 df       	rcall	.-146    	; 0x4f0 <_Z12disableTimerh>
 582:	60 e0       	ldi	r22, 0x00	; 0
 584:	8c 2f       	mov	r24, r28
 586:	cf 91       	pop	r28
 588:	fa c1       	rjmp	.+1012   	; 0x97e <digitalWrite>

0000058a <__vector_13>:
 58a:	1f 92       	push	r1
 58c:	0f 92       	push	r0
 58e:	0f b6       	in	r0, 0x3f	; 63
 590:	0f 92       	push	r0
 592:	11 24       	eor	r1, r1
 594:	0b b6       	in	r0, 0x3b	; 59
 596:	0f 92       	push	r0
 598:	2f 93       	push	r18
 59a:	3f 93       	push	r19
 59c:	4f 93       	push	r20
 59e:	5f 93       	push	r21
 5a0:	6f 93       	push	r22
 5a2:	7f 93       	push	r23
 5a4:	8f 93       	push	r24
 5a6:	9f 93       	push	r25
 5a8:	af 93       	push	r26
 5aa:	bf 93       	push	r27
 5ac:	ef 93       	push	r30
 5ae:	ff 93       	push	r31
 5b0:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <timer2_toggle_count>
 5b4:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <timer2_toggle_count+0x1>
 5b8:	a0 91 08 02 	lds	r26, 0x0208	; 0x800208 <timer2_toggle_count+0x2>
 5bc:	b0 91 09 02 	lds	r27, 0x0209	; 0x800209 <timer2_toggle_count+0x3>
 5c0:	89 2b       	or	r24, r25
 5c2:	8a 2b       	or	r24, r26
 5c4:	8b 2b       	or	r24, r27
 5c6:	51 f1       	breq	.+84     	; 0x61c <__vector_13+0x92>
 5c8:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <timer2_pin_mask>
 5cc:	e0 91 04 02 	lds	r30, 0x0204	; 0x800204 <timer2_pin_port>
 5d0:	f0 91 05 02 	lds	r31, 0x0205	; 0x800205 <timer2_pin_port+0x1>
 5d4:	80 81       	ld	r24, Z
 5d6:	89 27       	eor	r24, r25
 5d8:	80 83       	st	Z, r24
 5da:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <timer2_toggle_count>
 5de:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <timer2_toggle_count+0x1>
 5e2:	a0 91 08 02 	lds	r26, 0x0208	; 0x800208 <timer2_toggle_count+0x2>
 5e6:	b0 91 09 02 	lds	r27, 0x0209	; 0x800209 <timer2_toggle_count+0x3>
 5ea:	18 16       	cp	r1, r24
 5ec:	19 06       	cpc	r1, r25
 5ee:	1a 06       	cpc	r1, r26
 5f0:	1b 06       	cpc	r1, r27
 5f2:	bc f4       	brge	.+46     	; 0x622 <__vector_13+0x98>
 5f4:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <timer2_toggle_count>
 5f8:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <timer2_toggle_count+0x1>
 5fc:	a0 91 08 02 	lds	r26, 0x0208	; 0x800208 <timer2_toggle_count+0x2>
 600:	b0 91 09 02 	lds	r27, 0x0209	; 0x800209 <timer2_toggle_count+0x3>
 604:	01 97       	sbiw	r24, 0x01	; 1
 606:	a1 09       	sbc	r26, r1
 608:	b1 09       	sbc	r27, r1
 60a:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <timer2_toggle_count>
 60e:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <timer2_toggle_count+0x1>
 612:	a0 93 08 02 	sts	0x0208, r26	; 0x800208 <timer2_toggle_count+0x2>
 616:	b0 93 09 02 	sts	0x0209, r27	; 0x800209 <timer2_toggle_count+0x3>
 61a:	03 c0       	rjmp	.+6      	; 0x622 <__vector_13+0x98>
 61c:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
 620:	a1 df       	rcall	.-190    	; 0x564 <_Z6noToneh>
 622:	ff 91       	pop	r31
 624:	ef 91       	pop	r30
 626:	bf 91       	pop	r27
 628:	af 91       	pop	r26
 62a:	9f 91       	pop	r25
 62c:	8f 91       	pop	r24
 62e:	7f 91       	pop	r23
 630:	6f 91       	pop	r22
 632:	5f 91       	pop	r21
 634:	4f 91       	pop	r20
 636:	3f 91       	pop	r19
 638:	2f 91       	pop	r18
 63a:	0f 90       	pop	r0
 63c:	0b be       	out	0x3b, r0	; 59
 63e:	0f 90       	pop	r0
 640:	0f be       	out	0x3f, r0	; 63
 642:	0f 90       	pop	r0
 644:	1f 90       	pop	r1
 646:	18 95       	reti

00000648 <__vector_23>:
 648:	1f 92       	push	r1
 64a:	0f 92       	push	r0
 64c:	0f b6       	in	r0, 0x3f	; 63
 64e:	0f 92       	push	r0
 650:	11 24       	eor	r1, r1
 652:	2f 93       	push	r18
 654:	3f 93       	push	r19
 656:	8f 93       	push	r24
 658:	9f 93       	push	r25
 65a:	af 93       	push	r26
 65c:	bf 93       	push	r27
 65e:	80 91 0b 02 	lds	r24, 0x020B	; 0x80020b <timer0_millis>
 662:	90 91 0c 02 	lds	r25, 0x020C	; 0x80020c <timer0_millis+0x1>
 666:	a0 91 0d 02 	lds	r26, 0x020D	; 0x80020d <timer0_millis+0x2>
 66a:	b0 91 0e 02 	lds	r27, 0x020E	; 0x80020e <timer0_millis+0x3>
 66e:	30 91 0a 02 	lds	r19, 0x020A	; 0x80020a <timer0_fract>
 672:	23 e0       	ldi	r18, 0x03	; 3
 674:	23 0f       	add	r18, r19
 676:	2d 37       	cpi	r18, 0x7D	; 125
 678:	20 f4       	brcc	.+8      	; 0x682 <__vector_23+0x3a>
 67a:	01 96       	adiw	r24, 0x01	; 1
 67c:	a1 1d       	adc	r26, r1
 67e:	b1 1d       	adc	r27, r1
 680:	05 c0       	rjmp	.+10     	; 0x68c <__vector_23+0x44>
 682:	26 e8       	ldi	r18, 0x86	; 134
 684:	23 0f       	add	r18, r19
 686:	02 96       	adiw	r24, 0x02	; 2
 688:	a1 1d       	adc	r26, r1
 68a:	b1 1d       	adc	r27, r1
 68c:	20 93 0a 02 	sts	0x020A, r18	; 0x80020a <timer0_fract>
 690:	80 93 0b 02 	sts	0x020B, r24	; 0x80020b <timer0_millis>
 694:	90 93 0c 02 	sts	0x020C, r25	; 0x80020c <timer0_millis+0x1>
 698:	a0 93 0d 02 	sts	0x020D, r26	; 0x80020d <timer0_millis+0x2>
 69c:	b0 93 0e 02 	sts	0x020E, r27	; 0x80020e <timer0_millis+0x3>
 6a0:	80 91 0f 02 	lds	r24, 0x020F	; 0x80020f <timer0_overflow_count>
 6a4:	90 91 10 02 	lds	r25, 0x0210	; 0x800210 <timer0_overflow_count+0x1>
 6a8:	a0 91 11 02 	lds	r26, 0x0211	; 0x800211 <timer0_overflow_count+0x2>
 6ac:	b0 91 12 02 	lds	r27, 0x0212	; 0x800212 <timer0_overflow_count+0x3>
 6b0:	01 96       	adiw	r24, 0x01	; 1
 6b2:	a1 1d       	adc	r26, r1
 6b4:	b1 1d       	adc	r27, r1
 6b6:	80 93 0f 02 	sts	0x020F, r24	; 0x80020f <timer0_overflow_count>
 6ba:	90 93 10 02 	sts	0x0210, r25	; 0x800210 <timer0_overflow_count+0x1>
 6be:	a0 93 11 02 	sts	0x0211, r26	; 0x800211 <timer0_overflow_count+0x2>
 6c2:	b0 93 12 02 	sts	0x0212, r27	; 0x800212 <timer0_overflow_count+0x3>
 6c6:	bf 91       	pop	r27
 6c8:	af 91       	pop	r26
 6ca:	9f 91       	pop	r25
 6cc:	8f 91       	pop	r24
 6ce:	3f 91       	pop	r19
 6d0:	2f 91       	pop	r18
 6d2:	0f 90       	pop	r0
 6d4:	0f be       	out	0x3f, r0	; 63
 6d6:	0f 90       	pop	r0
 6d8:	1f 90       	pop	r1
 6da:	18 95       	reti

000006dc <micros>:
 6dc:	3f b7       	in	r19, 0x3f	; 63
 6de:	f8 94       	cli
 6e0:	80 91 0f 02 	lds	r24, 0x020F	; 0x80020f <timer0_overflow_count>
 6e4:	90 91 10 02 	lds	r25, 0x0210	; 0x800210 <timer0_overflow_count+0x1>
 6e8:	a0 91 11 02 	lds	r26, 0x0211	; 0x800211 <timer0_overflow_count+0x2>
 6ec:	b0 91 12 02 	lds	r27, 0x0212	; 0x800212 <timer0_overflow_count+0x3>
 6f0:	26 b5       	in	r18, 0x26	; 38
 6f2:	a8 9b       	sbis	0x15, 0	; 21
 6f4:	05 c0       	rjmp	.+10     	; 0x700 <micros+0x24>
 6f6:	2f 3f       	cpi	r18, 0xFF	; 255
 6f8:	19 f0       	breq	.+6      	; 0x700 <micros+0x24>
 6fa:	01 96       	adiw	r24, 0x01	; 1
 6fc:	a1 1d       	adc	r26, r1
 6fe:	b1 1d       	adc	r27, r1
 700:	3f bf       	out	0x3f, r19	; 63
 702:	ba 2f       	mov	r27, r26
 704:	a9 2f       	mov	r26, r25
 706:	98 2f       	mov	r25, r24
 708:	88 27       	eor	r24, r24
 70a:	82 0f       	add	r24, r18
 70c:	91 1d       	adc	r25, r1
 70e:	a1 1d       	adc	r26, r1
 710:	b1 1d       	adc	r27, r1
 712:	bc 01       	movw	r22, r24
 714:	cd 01       	movw	r24, r26
 716:	42 e0       	ldi	r20, 0x02	; 2
 718:	66 0f       	add	r22, r22
 71a:	77 1f       	adc	r23, r23
 71c:	88 1f       	adc	r24, r24
 71e:	99 1f       	adc	r25, r25
 720:	4a 95       	dec	r20
 722:	d1 f7       	brne	.-12     	; 0x718 <micros+0x3c>
 724:	08 95       	ret

00000726 <delay>:
 726:	8f 92       	push	r8
 728:	9f 92       	push	r9
 72a:	af 92       	push	r10
 72c:	bf 92       	push	r11
 72e:	cf 92       	push	r12
 730:	df 92       	push	r13
 732:	ef 92       	push	r14
 734:	ff 92       	push	r15
 736:	6b 01       	movw	r12, r22
 738:	7c 01       	movw	r14, r24
 73a:	d0 df       	rcall	.-96     	; 0x6dc <micros>
 73c:	4b 01       	movw	r8, r22
 73e:	5c 01       	movw	r10, r24
 740:	c1 14       	cp	r12, r1
 742:	d1 04       	cpc	r13, r1
 744:	e1 04       	cpc	r14, r1
 746:	f1 04       	cpc	r15, r1
 748:	f1 f0       	breq	.+60     	; 0x786 <delay+0x60>
 74a:	47 d1       	rcall	.+654    	; 0x9da <yield>
 74c:	c7 df       	rcall	.-114    	; 0x6dc <micros>
 74e:	dc 01       	movw	r26, r24
 750:	cb 01       	movw	r24, r22
 752:	88 19       	sub	r24, r8
 754:	99 09       	sbc	r25, r9
 756:	aa 09       	sbc	r26, r10
 758:	bb 09       	sbc	r27, r11
 75a:	88 3e       	cpi	r24, 0xE8	; 232
 75c:	93 40       	sbci	r25, 0x03	; 3
 75e:	a1 05       	cpc	r26, r1
 760:	b1 05       	cpc	r27, r1
 762:	70 f3       	brcs	.-36     	; 0x740 <delay+0x1a>
 764:	21 e0       	ldi	r18, 0x01	; 1
 766:	c2 1a       	sub	r12, r18
 768:	d1 08       	sbc	r13, r1
 76a:	e1 08       	sbc	r14, r1
 76c:	f1 08       	sbc	r15, r1
 76e:	88 ee       	ldi	r24, 0xE8	; 232
 770:	88 0e       	add	r8, r24
 772:	83 e0       	ldi	r24, 0x03	; 3
 774:	98 1e       	adc	r9, r24
 776:	a1 1c       	adc	r10, r1
 778:	b1 1c       	adc	r11, r1
 77a:	c1 14       	cp	r12, r1
 77c:	d1 04       	cpc	r13, r1
 77e:	e1 04       	cpc	r14, r1
 780:	f1 04       	cpc	r15, r1
 782:	21 f7       	brne	.-56     	; 0x74c <delay+0x26>
 784:	dd cf       	rjmp	.-70     	; 0x740 <delay+0x1a>
 786:	ff 90       	pop	r15
 788:	ef 90       	pop	r14
 78a:	df 90       	pop	r13
 78c:	cf 90       	pop	r12
 78e:	bf 90       	pop	r11
 790:	af 90       	pop	r10
 792:	9f 90       	pop	r9
 794:	8f 90       	pop	r8
 796:	08 95       	ret

00000798 <init>:
 798:	78 94       	sei
 79a:	84 b5       	in	r24, 0x24	; 36
 79c:	82 60       	ori	r24, 0x02	; 2
 79e:	84 bd       	out	0x24, r24	; 36
 7a0:	84 b5       	in	r24, 0x24	; 36
 7a2:	81 60       	ori	r24, 0x01	; 1
 7a4:	84 bd       	out	0x24, r24	; 36
 7a6:	85 b5       	in	r24, 0x25	; 37
 7a8:	82 60       	ori	r24, 0x02	; 2
 7aa:	85 bd       	out	0x25, r24	; 37
 7ac:	85 b5       	in	r24, 0x25	; 37
 7ae:	81 60       	ori	r24, 0x01	; 1
 7b0:	85 bd       	out	0x25, r24	; 37
 7b2:	ee e6       	ldi	r30, 0x6E	; 110
 7b4:	f0 e0       	ldi	r31, 0x00	; 0
 7b6:	80 81       	ld	r24, Z
 7b8:	81 60       	ori	r24, 0x01	; 1
 7ba:	80 83       	st	Z, r24
 7bc:	e1 e8       	ldi	r30, 0x81	; 129
 7be:	f0 e0       	ldi	r31, 0x00	; 0
 7c0:	10 82       	st	Z, r1
 7c2:	80 81       	ld	r24, Z
 7c4:	82 60       	ori	r24, 0x02	; 2
 7c6:	80 83       	st	Z, r24
 7c8:	80 81       	ld	r24, Z
 7ca:	81 60       	ori	r24, 0x01	; 1
 7cc:	80 83       	st	Z, r24
 7ce:	e0 e8       	ldi	r30, 0x80	; 128
 7d0:	f0 e0       	ldi	r31, 0x00	; 0
 7d2:	80 81       	ld	r24, Z
 7d4:	81 60       	ori	r24, 0x01	; 1
 7d6:	80 83       	st	Z, r24
 7d8:	e1 eb       	ldi	r30, 0xB1	; 177
 7da:	f0 e0       	ldi	r31, 0x00	; 0
 7dc:	80 81       	ld	r24, Z
 7de:	84 60       	ori	r24, 0x04	; 4
 7e0:	80 83       	st	Z, r24
 7e2:	e0 eb       	ldi	r30, 0xB0	; 176
 7e4:	f0 e0       	ldi	r31, 0x00	; 0
 7e6:	80 81       	ld	r24, Z
 7e8:	81 60       	ori	r24, 0x01	; 1
 7ea:	80 83       	st	Z, r24
 7ec:	e1 e9       	ldi	r30, 0x91	; 145
 7ee:	f0 e0       	ldi	r31, 0x00	; 0
 7f0:	80 81       	ld	r24, Z
 7f2:	82 60       	ori	r24, 0x02	; 2
 7f4:	80 83       	st	Z, r24
 7f6:	80 81       	ld	r24, Z
 7f8:	81 60       	ori	r24, 0x01	; 1
 7fa:	80 83       	st	Z, r24
 7fc:	e0 e9       	ldi	r30, 0x90	; 144
 7fe:	f0 e0       	ldi	r31, 0x00	; 0
 800:	80 81       	ld	r24, Z
 802:	81 60       	ori	r24, 0x01	; 1
 804:	80 83       	st	Z, r24
 806:	e1 ea       	ldi	r30, 0xA1	; 161
 808:	f0 e0       	ldi	r31, 0x00	; 0
 80a:	80 81       	ld	r24, Z
 80c:	82 60       	ori	r24, 0x02	; 2
 80e:	80 83       	st	Z, r24
 810:	80 81       	ld	r24, Z
 812:	81 60       	ori	r24, 0x01	; 1
 814:	80 83       	st	Z, r24
 816:	e0 ea       	ldi	r30, 0xA0	; 160
 818:	f0 e0       	ldi	r31, 0x00	; 0
 81a:	80 81       	ld	r24, Z
 81c:	81 60       	ori	r24, 0x01	; 1
 81e:	80 83       	st	Z, r24
 820:	e1 e2       	ldi	r30, 0x21	; 33
 822:	f1 e0       	ldi	r31, 0x01	; 1
 824:	80 81       	ld	r24, Z
 826:	82 60       	ori	r24, 0x02	; 2
 828:	80 83       	st	Z, r24
 82a:	80 81       	ld	r24, Z
 82c:	81 60       	ori	r24, 0x01	; 1
 82e:	80 83       	st	Z, r24
 830:	e0 e2       	ldi	r30, 0x20	; 32
 832:	f1 e0       	ldi	r31, 0x01	; 1
 834:	80 81       	ld	r24, Z
 836:	81 60       	ori	r24, 0x01	; 1
 838:	80 83       	st	Z, r24
 83a:	ea e7       	ldi	r30, 0x7A	; 122
 83c:	f0 e0       	ldi	r31, 0x00	; 0
 83e:	80 81       	ld	r24, Z
 840:	84 60       	ori	r24, 0x04	; 4
 842:	80 83       	st	Z, r24
 844:	80 81       	ld	r24, Z
 846:	82 60       	ori	r24, 0x02	; 2
 848:	80 83       	st	Z, r24
 84a:	80 81       	ld	r24, Z
 84c:	81 60       	ori	r24, 0x01	; 1
 84e:	80 83       	st	Z, r24
 850:	80 81       	ld	r24, Z
 852:	80 68       	ori	r24, 0x80	; 128
 854:	80 83       	st	Z, r24
 856:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
 85a:	08 95       	ret

0000085c <turnOffPWM>:
 85c:	90 e0       	ldi	r25, 0x00	; 0
 85e:	fc 01       	movw	r30, r24
 860:	31 97       	sbiw	r30, 0x01	; 1
 862:	e2 31       	cpi	r30, 0x12	; 18
 864:	f1 05       	cpc	r31, r1
 866:	08 f0       	brcs	.+2      	; 0x86a <turnOffPWM+0xe>
 868:	4d c0       	rjmp	.+154    	; 0x904 <turnOffPWM+0xa8>
 86a:	88 27       	eor	r24, r24
 86c:	ee 58       	subi	r30, 0x8E	; 142
 86e:	ff 4f       	sbci	r31, 0xFF	; 255
 870:	8f 4f       	sbci	r24, 0xFF	; 255
 872:	b4 c0       	rjmp	.+360    	; 0x9dc <__tablejump2__>
 874:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
 878:	8f 77       	andi	r24, 0x7F	; 127
 87a:	03 c0       	rjmp	.+6      	; 0x882 <turnOffPWM+0x26>
 87c:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
 880:	8f 7d       	andi	r24, 0xDF	; 223
 882:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
 886:	08 95       	ret
 888:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
 88c:	87 7f       	andi	r24, 0xF7	; 247
 88e:	f9 cf       	rjmp	.-14     	; 0x882 <turnOffPWM+0x26>
 890:	84 b5       	in	r24, 0x24	; 36
 892:	8f 77       	andi	r24, 0x7F	; 127
 894:	02 c0       	rjmp	.+4      	; 0x89a <turnOffPWM+0x3e>
 896:	84 b5       	in	r24, 0x24	; 36
 898:	8f 7d       	andi	r24, 0xDF	; 223
 89a:	84 bd       	out	0x24, r24	; 36
 89c:	08 95       	ret
 89e:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
 8a2:	8f 77       	andi	r24, 0x7F	; 127
 8a4:	03 c0       	rjmp	.+6      	; 0x8ac <turnOffPWM+0x50>
 8a6:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
 8aa:	8f 7d       	andi	r24, 0xDF	; 223
 8ac:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
 8b0:	08 95       	ret
 8b2:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
 8b6:	8f 77       	andi	r24, 0x7F	; 127
 8b8:	07 c0       	rjmp	.+14     	; 0x8c8 <turnOffPWM+0x6c>
 8ba:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
 8be:	8f 7d       	andi	r24, 0xDF	; 223
 8c0:	03 c0       	rjmp	.+6      	; 0x8c8 <turnOffPWM+0x6c>
 8c2:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
 8c6:	87 7f       	andi	r24, 0xF7	; 247
 8c8:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
 8cc:	08 95       	ret
 8ce:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
 8d2:	8f 77       	andi	r24, 0x7F	; 127
 8d4:	07 c0       	rjmp	.+14     	; 0x8e4 <turnOffPWM+0x88>
 8d6:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
 8da:	8f 7d       	andi	r24, 0xDF	; 223
 8dc:	03 c0       	rjmp	.+6      	; 0x8e4 <turnOffPWM+0x88>
 8de:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
 8e2:	87 7f       	andi	r24, 0xF7	; 247
 8e4:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
 8e8:	08 95       	ret
 8ea:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
 8ee:	8f 77       	andi	r24, 0x7F	; 127
 8f0:	07 c0       	rjmp	.+14     	; 0x900 <turnOffPWM+0xa4>
 8f2:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
 8f6:	8f 7d       	andi	r24, 0xDF	; 223
 8f8:	03 c0       	rjmp	.+6      	; 0x900 <turnOffPWM+0xa4>
 8fa:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
 8fe:	87 7f       	andi	r24, 0xF7	; 247
 900:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
 904:	08 95       	ret

00000906 <pinMode>:
 906:	cf 93       	push	r28
 908:	df 93       	push	r29
 90a:	90 e0       	ldi	r25, 0x00	; 0
 90c:	fc 01       	movw	r30, r24
 90e:	e1 5b       	subi	r30, 0xB1	; 177
 910:	fe 4f       	sbci	r31, 0xFE	; 254
 912:	24 91       	lpm	r18, Z
 914:	fc 01       	movw	r30, r24
 916:	eb 56       	subi	r30, 0x6B	; 107
 918:	fe 4f       	sbci	r31, 0xFE	; 254
 91a:	84 91       	lpm	r24, Z
 91c:	88 23       	and	r24, r24
 91e:	61 f1       	breq	.+88     	; 0x978 <pinMode+0x72>
 920:	90 e0       	ldi	r25, 0x00	; 0
 922:	88 0f       	add	r24, r24
 924:	99 1f       	adc	r25, r25
 926:	fc 01       	movw	r30, r24
 928:	eb 50       	subi	r30, 0x0B	; 11
 92a:	fe 4f       	sbci	r31, 0xFE	; 254
 92c:	c5 91       	lpm	r28, Z+
 92e:	d4 91       	lpm	r29, Z
 930:	fc 01       	movw	r30, r24
 932:	e5 52       	subi	r30, 0x25	; 37
 934:	fe 4f       	sbci	r31, 0xFE	; 254
 936:	a5 91       	lpm	r26, Z+
 938:	b4 91       	lpm	r27, Z
 93a:	61 11       	cpse	r22, r1
 93c:	09 c0       	rjmp	.+18     	; 0x950 <pinMode+0x4a>
 93e:	9f b7       	in	r25, 0x3f	; 63
 940:	f8 94       	cli
 942:	88 81       	ld	r24, Y
 944:	20 95       	com	r18
 946:	82 23       	and	r24, r18
 948:	88 83       	st	Y, r24
 94a:	ec 91       	ld	r30, X
 94c:	2e 23       	and	r18, r30
 94e:	0b c0       	rjmp	.+22     	; 0x966 <pinMode+0x60>
 950:	62 30       	cpi	r22, 0x02	; 2
 952:	61 f4       	brne	.+24     	; 0x96c <pinMode+0x66>
 954:	9f b7       	in	r25, 0x3f	; 63
 956:	f8 94       	cli
 958:	88 81       	ld	r24, Y
 95a:	32 2f       	mov	r19, r18
 95c:	30 95       	com	r19
 95e:	83 23       	and	r24, r19
 960:	88 83       	st	Y, r24
 962:	ec 91       	ld	r30, X
 964:	2e 2b       	or	r18, r30
 966:	2c 93       	st	X, r18
 968:	9f bf       	out	0x3f, r25	; 63
 96a:	06 c0       	rjmp	.+12     	; 0x978 <pinMode+0x72>
 96c:	8f b7       	in	r24, 0x3f	; 63
 96e:	f8 94       	cli
 970:	e8 81       	ld	r30, Y
 972:	2e 2b       	or	r18, r30
 974:	28 83       	st	Y, r18
 976:	8f bf       	out	0x3f, r24	; 63
 978:	df 91       	pop	r29
 97a:	cf 91       	pop	r28
 97c:	08 95       	ret

0000097e <digitalWrite>:
 97e:	1f 93       	push	r17
 980:	cf 93       	push	r28
 982:	df 93       	push	r29
 984:	28 2f       	mov	r18, r24
 986:	30 e0       	ldi	r19, 0x00	; 0
 988:	f9 01       	movw	r30, r18
 98a:	e7 5f       	subi	r30, 0xF7	; 247
 98c:	fe 4f       	sbci	r31, 0xFE	; 254
 98e:	84 91       	lpm	r24, Z
 990:	f9 01       	movw	r30, r18
 992:	e1 5b       	subi	r30, 0xB1	; 177
 994:	fe 4f       	sbci	r31, 0xFE	; 254
 996:	d4 91       	lpm	r29, Z
 998:	f9 01       	movw	r30, r18
 99a:	eb 56       	subi	r30, 0x6B	; 107
 99c:	fe 4f       	sbci	r31, 0xFE	; 254
 99e:	c4 91       	lpm	r28, Z
 9a0:	cc 23       	and	r28, r28
 9a2:	b9 f0       	breq	.+46     	; 0x9d2 <digitalWrite+0x54>
 9a4:	16 2f       	mov	r17, r22
 9a6:	81 11       	cpse	r24, r1
 9a8:	59 df       	rcall	.-334    	; 0x85c <turnOffPWM>
 9aa:	ec 2f       	mov	r30, r28
 9ac:	f0 e0       	ldi	r31, 0x00	; 0
 9ae:	ee 0f       	add	r30, r30
 9b0:	ff 1f       	adc	r31, r31
 9b2:	e5 52       	subi	r30, 0x25	; 37
 9b4:	fe 4f       	sbci	r31, 0xFE	; 254
 9b6:	a5 91       	lpm	r26, Z+
 9b8:	b4 91       	lpm	r27, Z
 9ba:	9f b7       	in	r25, 0x3f	; 63
 9bc:	f8 94       	cli
 9be:	11 11       	cpse	r17, r1
 9c0:	04 c0       	rjmp	.+8      	; 0x9ca <digitalWrite+0x4c>
 9c2:	8c 91       	ld	r24, X
 9c4:	d0 95       	com	r29
 9c6:	d8 23       	and	r29, r24
 9c8:	02 c0       	rjmp	.+4      	; 0x9ce <digitalWrite+0x50>
 9ca:	ec 91       	ld	r30, X
 9cc:	de 2b       	or	r29, r30
 9ce:	dc 93       	st	X, r29
 9d0:	9f bf       	out	0x3f, r25	; 63
 9d2:	df 91       	pop	r29
 9d4:	cf 91       	pop	r28
 9d6:	1f 91       	pop	r17
 9d8:	08 95       	ret

000009da <yield>:
 9da:	08 95       	ret

000009dc <__tablejump2__>:
 9dc:	ee 0f       	add	r30, r30
 9de:	ff 1f       	adc	r31, r31
 9e0:	88 1f       	adc	r24, r24
 9e2:	8b bf       	out	0x3b, r24	; 59
 9e4:	07 90       	elpm	r0, Z+
 9e6:	f6 91       	elpm	r31, Z
 9e8:	e0 2d       	mov	r30, r0
 9ea:	19 94       	eijmp

000009ec <_exit>:
 9ec:	f8 94       	cli

000009ee <__stop_program>:
 9ee:	ff cf       	rjmp	.-2      	; 0x9ee <__stop_program>
